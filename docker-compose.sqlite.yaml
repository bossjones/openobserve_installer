services:
  minio:
    image: quay.io/minio/minio:latest
    container_name: openobserve-sqlite-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_REGION_NAME: "us-east-1"
      MINIO_HTTP_TRACE: "/dev/stdout"
      MINIO_LOG_QUERY: "on"
      MINIO_LOG_LEVEL: "debug"
      MINIO_AUDIT_WEBHOOK_ENABLE: "on"
      MINIO_AUDIT_WEBHOOK_ENDPOINT: "http://syslog-ng:1514"
    command: server /data --console-address ":9093"
    ports:
      - "9092:9000"
      - "9093:9093"
    volumes:
      - minio_sqlite_data:/data
      - ./minio_audit_logs:/minio/audit/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  syslog-ng:
    image: lscr.io/linuxserver/syslog-ng:latest
    container_name: syslog-ng-sqlite
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./containers/syslog-ng/config/syslog-ng.conf:/config/syslog-ng.conf
      # - ./syslog-ng/logs:/var/log

      #  find . -type f -name "*log*" ! -name "*.gz" ! -name "*.[0-9]" ! -name "*.[0-9][0-9]" | pbcopy

      # Application specific log directories
      - ./logs/usr/lib/unifi/logs:/var/log/unifi:ro
      - ./logs/var/log/postgresql:/var/log/postgresql:ro
      - ./logs/var/log/nginx:/var/log/nginx:ro
      - ./logs/var/log/apt:/var/log/apt:ro
      - ./logs/var/log/unattended-upgrades:/var/log/unattended-upgrades:ro
      - ./logs/data/unifi-core/logs:/var/log/unifi-core:ro
      - ./logs/srv/unifi/logs:/var/log/unifi-srv:ro
    ports:
      - 1515:1514/udp
      - 1602:1601/tcp
      - 16515:16514/tcp
    restart: unless-stopped
    depends_on:
      - openobserve



  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    container_name: openobserve-sqlite
    depends_on:
      minio:
        condition: service_healthy
    environment:
      ZO_ROOT_USER_EMAIL: "admin@example.com"
      ZO_ROOT_USER_PASSWORD: "Complexpass#123"
      ZO_META_STORE: "sqlite"
      ZO_S3_PROVIDER: "minio"
      ZO_S3_SERVER_URL: "http://minio:9000"
      ZO_S3_BUCKET_NAME: "openobserve-sqlite"
      ZO_S3_REGION_NAME: "us-east-1"
      ZO_S3_ACCESS_KEY: "minioadmin"
      ZO_S3_SECRET_KEY: "minioadmin123"
      ZO_S3_BUCKET_PREFIX: "sqlite"
      RUST_LOG: "debug"
      ZO_LOG_LEVEL: "debug"
      ZO_LOG_FORMAT: "text"
      ZO_LOCAL_MODE_STORAGE: "s3"
      ZO_S3_FORCE_PATH_STYLE: true
      ZO_TCP_PORT: 5515
      ZO_UDP_PORT: 5515
      ZO_LOCAL_MODE: true
      ZO_TELEMETRY: false
    ports:
      - "5081:5080"
    volumes:
      - openobserve_sqlite_data:/data

  log-generator:
    build:
      context: ./containers/syslog_log_generator
      dockerfile: Dockerfile
    container_name: openobserve-sqlite-log-generator
    environment:
      REMOTE_HOSTNAME_LOGS: "openobserve-sqlite"
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./containers/syslog_log_generator/generate_logs.sh:/usr/local/bin/generate_logs.sh
    networks:
      - default
    restart: unless-stopped

networks:
  default:
    name: openobserve-sqlite-network

volumes:
  minio_sqlite_data:
  openobserve_sqlite_data:
